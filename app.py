import streamlit as st
import pandas as pd
import urllib.parse
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity

# Page setup
st.set_page_config(page_title="üßò Yoga Pose Recommender", layout="centered")

# Load dataset
df = pd.read_csv("yoga_pose_data.csv")

# Title
st.title("üßò‚Äç‚ôÄÔ∏è Yoga Pose Generator Based on Pain Description")

# Language selection
lang = st.selectbox(
    "üåê Choose Your Language / ‡§Ö‡§™‡§®‡•Ä ‡§≠‡§æ‡§∑‡§æ ‡§ö‡•Å‡§®‡•á‡§Ç / ‡∞Æ‡±Ä ‡∞≠‡∞æ‡∞∑‡∞®‡±Å ‡∞é‡∞Ç‡∞ö‡±Å‡∞ï‡±ã‡∞Ç‡∞°‡∞ø",
    ["English", "Hindi", "Telugu"]
)

# User fitness level for personalization
fitness_level = st.selectbox(
    "üèãÔ∏è Fitness Level",
    ["Beginner", "Intermediate", "Advanced"]
)

# Free-text pain description
pain_input = st.text_input("üìù Describe your pain or discomfort (any language)", "")

# Multilingual pain area mapping lists, if needed for UI
pain_labels = {
    "English": ["Neck", "Shoulders", "Back", "Lower Back", "Hips", "Knees", "Legs", "Spine", "Full Body"],
    "Hindi": ["‡§ó‡§∞‡•ç‡§¶‡§®", "‡§ï‡§Ç‡§ß‡•á", "‡§™‡•Ä‡§†", "‡§®‡§ø‡§ö‡§≤‡•Ä ‡§™‡•Ä‡§†", "‡§ï‡•Ç‡§≤‡•ç‡§π‡•á", "‡§ò‡•Å‡§ü‡§®‡•á", "‡§™‡•à‡§∞", "‡§∞‡•Ä‡§¢‡§º", "‡§™‡•Ç‡§∞‡§æ ‡§∂‡§∞‡•Ä‡§∞"],
    "Telugu": ["‡∞Æ‡±Ü‡∞°", "‡∞≠‡±Å‡∞ú‡∞æ‡∞≤‡±Å", "‡∞µ‡±Ü‡∞®‡±Å‡∞ï ‡∞≠‡∞æ‡∞ó‡∞Ç", "‡∞§‡∞ï‡±ç‡∞ï‡±Å‡∞µ ‡∞µ‡±Ü‡∞®‡±ç‡∞®‡±Å", "‡∞®‡∞ø‡∞§‡∞Ç‡∞¨‡∞æ‡∞≤‡±Å", "‡∞Æ‡±ã‡∞ï‡∞æ‡∞≥‡±ç‡∞≤‡±Å", "‡∞ï‡∞æ‡∞≥‡±ç‡∞≤‡±Å", "‡∞∏‡±ç‡∞™‡±à‡∞®‡±ç", "‡∞™‡±Ç‡∞∞‡±ç‡∞§‡∞ø ‡∞∂‡∞∞‡±Ä‡∞∞‡∞Ç"]
}

lang_map = {
    "‡§ó‡§∞‡•ç‡§¶‡§®": "Neck", "‡§ï‡§Ç‡§ß‡•á": "Shoulders", "‡§™‡•Ä‡§†": "Back", "‡§®‡§ø‡§ö‡§≤‡•Ä ‡§™‡•Ä‡§†": "Lower Back",
    "‡§ï‡•Ç‡§≤‡•ç‡§π‡•á": "Hips", "‡§ò‡•Å‡§ü‡§®‡•á": "Knees", "‡§™‡•à‡§∞": "Legs", "‡§∞‡•Ä‡§¢‡§º": "Spine", "‡§™‡•Ç‡§∞‡§æ ‡§∂‡§∞‡•Ä‡§∞": "Full Body",
    "‡∞Æ‡±Ü‡∞°": "Neck", "‡∞≠‡±Å‡∞ú‡∞æ‡∞≤‡±Å": "Shoulders", "‡∞µ‡±Ü‡∞®‡±Å‡∞ï ‡∞≠‡∞æ‡∞ó‡∞Ç": "Back", "‡∞§‡∞ï‡±ç‡∞ï‡±Å‡∞µ ‡∞µ‡±Ü‡∞®‡±ç‡∞®‡±Å": "Lower Back",
    "‡∞®‡∞ø‡∞§‡∞Ç‡∞¨‡∞æ‡∞≤‡±Å": "Hips", "‡∞Æ‡±ã‡∞ï‡∞æ‡∞≥‡±ç‡∞≤‡±Å": "Knees", "‡∞ï‡∞æ‡∞≥‡±ç‡∞≤‡±Å": "Legs", "‡∞∏‡±ç‡∞™‡±à‡∞®‡±ç": "Spine", "‡∞™‡±Ç‡∞∞‡±ç‡∞§‡∞ø ‡∞∂‡∞∞‡±Ä‡∞∞‡∞Ç": "Full Body"
}

# NLP function to guess closest pain area based on input text
def guess_pain_area(user_text, df):
    choices = df["pain_area"].unique()
    corpus = [user_text] + list(choices)
    tfidf = TfidfVectorizer().fit_transform(corpus)
    sim = cosine_similarity(tfidf[0:1], tfidf[1:]).flatten()
    best_idx = sim.argmax()
    return choices[best_idx]

# On search button press
if st.button("üîç Find Yoga Poses"):
    if pain_input.strip():
        selected_pain = guess_pain_area(pain_input, df)
    else:
        st.warning("‚ùó Please describe your pain for better recommendations.")
        st.stop()

    # Filter results by pain area and fitness level (assuming difficulty available)
    # For demonstration, we only filter by pain_area
    results = df[(df["pain_area"].str.lower() == selected_pain.lower())]

    if not results.empty:
        st.success(f"‚úÖ Yoga Poses for \"{pain_input}\" (mapped to: {selected_pain}):")
        for index, row in results.iterrows():
            pose_name = row["pose"]
            st.markdown(f"### üßò {pose_name}")

            # Show instructions as per language selection
            if lang == "English":
                st.markdown(f"**Instructions:** {row['instructions_english']}")
            elif lang == "Hindi":
                st.markdown(f"**‡§®‡§ø‡§∞‡•ç‡§¶‡•á‡§∂:** {row['instructions_hindi']}")
            elif lang == "Telugu":
                st.markdown(f"**‡∞∏‡±Ç‡∞ö‡∞®‡∞≤‡±Å:** {row['instructions_telugu']}")

            # Link to Google image search for pose
            query = urllib.parse.quote(pose_name + " yoga pose")
            search_url = f"https://www.google.com/search?tbm=isch&q={query}"
            st.markdown(f"[üñºÔ∏è Click for Pose Image]({search_url})", unsafe_allow_html=True)

            # Simple feedback (thumbs up/down)
            st.markdown("**Was this pose helpful?**")
            st.feedback("thumbs", key=f"feedback_{pose_name}_{index}")

            st.markdown("---")
    else:
        st.warning("‚ùå No yoga poses found for the pain area. Try different description.")